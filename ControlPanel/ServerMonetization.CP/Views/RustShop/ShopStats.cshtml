@using EasyShop.Domain.Enums.CP.Rust
@using Microsoft.AspNetCore.Http
@using Microsoft.EntityFrameworkCore.Internal
@model EasyShop.Domain.ViewModels.CP.ControlPanel.Rust.Shop.RustShopViewModel
@{
    ViewData["Title"] = $"{Model.ShopName} stats";
    Layout = "Partial/_RustBaseLayout";

    #region SelectPeriod

    string selectOptions = string.Empty;
    foreach (var item in Model.RustShopStatsViewModel.StatsPeriodList)
    {
        if (item == Model.RustShopStatsViewModel.StatsPeriod)
        {
            selectOptions += $@"<option value=""{item}"" selected=""selected"">{item.ToString().Replace("_", " ")}</option>";
        }
        else
        {
            selectOptions += $@"<option value=""{item}"">{item.ToString().Replace("_", " ")}</option>";
        }
    }

    #endregion SelectPeriod

    var revenueMaxChartValue = Model.RustShopStatsViewModel.RevenueModel.ChartValues.Max();
    var tenPercentsFromRevenueValuesMax = revenueMaxChartValue / 100 * 10 > 0 ? revenueMaxChartValue / 100 * 10 : 1;
    revenueMaxChartValue += tenPercentsFromRevenueValuesMax;

    var ordersMaxChartValue = Model.RustShopStatsViewModel.OrdersModel.ChartValues.Select(x => Int32.Parse(x)).Max();
    var tenPercentsFromOrdersMaxChartValue = ordersMaxChartValue / 100 * 10 > 0 ? ordersMaxChartValue / 100 * 10 : 1;
    ordersMaxChartValue += tenPercentsFromOrdersMaxChartValue;

    var itemsMaxChartValue = Model.RustShopStatsViewModel.ItemsModel.ChartValues.Select(x => Int32.Parse(x)).Max();
    var tenPercentsFromItemsMaxChartValue = itemsMaxChartValue / 100 * 10 > 0 ? itemsMaxChartValue / 100 * 10 : 1;
    itemsMaxChartValue += tenPercentsFromItemsMaxChartValue;

    var buyersMaxChartValue = Model.RustShopStatsViewModel.BuyersModel.ChartValues.Select(x => Int32.Parse(x)).Max();
    var tenPercentsFromBuyersMaxChartValue = buyersMaxChartValue / 100 * 10 > 0 ? buyersMaxChartValue / 100 * 10 : 1;
    buyersMaxChartValue += tenPercentsFromBuyersMaxChartValue;


    #region RevenueOverviewDotDialogDisplayedTextLogic

    var revenueOverviewDotDialogLast = Model.RustShopStatsViewModel.StatsPeriod switch
    {
        RustShopStatsPeriodEnum.Today => "Today",
        RustShopStatsPeriodEnum.Over_the_last_week => "Last week",
        RustShopStatsPeriodEnum.Over_the_last_30_days => "Last month",
        RustShopStatsPeriodEnum.Over_the_last_90_days => "Last 90 days",
        RustShopStatsPeriodEnum.Over_the_last_180_days => "Last 180 days",
        RustShopStatsPeriodEnum.Over_the_last_year => "Last year",
        RustShopStatsPeriodEnum.All_time => "All time"
    };

    var revenueOverviewDotDialogPrevious = Model.RustShopStatsViewModel.StatsPeriod switch
    {
        RustShopStatsPeriodEnum.Today => "Today",
        RustShopStatsPeriodEnum.Over_the_last_week => "Previous week",
        RustShopStatsPeriodEnum.Over_the_last_30_days => "Previous month",
        RustShopStatsPeriodEnum.Over_the_last_90_days => "Previous 90 days",
        RustShopStatsPeriodEnum.Over_the_last_180_days => "Previous 180 days",
        RustShopStatsPeriodEnum.Over_the_last_year => "Previous year",
        RustShopStatsPeriodEnum.All_time => "All time"
    };

    #endregion
}



<div class="row">
    <div class="col-xs-2 col-xs-offset-10 m-b-md">
        <div class="title-bar">
            <div class="title-bar-actions">
                <div class="btn-group bootstrap-select dropdown fit-width">
                    <select id="selectPeriod" class="selectpicker dropdown" name="period" data-dropdown-align-right="true" data-style="btn-default btn-sm" data-width="fit" tabindex="-98">
                        @Html.Raw(selectOptions)
                    </select>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row gutter-xs">
    <div class="col-xs-6 col-md-3">
        <div class="card">
            <div class="card-values">
                <div class="p-x">
                    <small>Revenue</small>
                    <h3 class="card-title fw-l"><span class="icon icon-dollar"></span> @Model.RustShopStatsViewModel.RevenueModel.TotalRevenue</h3>
                </div>
            </div>
            <div class="card-chart">
                <canvas data-chart="line"
                        data-animation="false"
                        data-labels='[@(Model.RustShopStatsViewModel.RevenueModel.ChartLabelValues != null ? string.Join(",", Model.RustShopStatsViewModel.RevenueModel.ChartLabelValues) : "")]'
                        data-values='[{"backgroundColor": "rgba(255, 255, 255, 0.1)", "borderColor": "#00aced", "data": [@(Model.RustShopStatsViewModel.RevenueModel.ChartValues != null ? string.Join(",", Model.RustShopStatsViewModel.RevenueModel.ChartValues) : "")]}]'
                        data-scales='{"yAxes": [{ "ticks": {"max": @revenueMaxChartValue}}]}'
                        data-hide='["legend", "points", "scalesX", "scalesY", "tooltips"]'
                        height="35"></canvas>
            </div>
        </div>
    </div>
    <div class="col-xs-6 col-md-3">
        <div class="card">
            <div class="card-values">
                <div class="p-x">
                    <small>Orders</small>
                    <h3 class="card-title fw-l"><span class="icon icon-shopping-bag"></span> @Model.RustShopStatsViewModel.OrdersModel.TotalOrders</h3>
                </div>
            </div>
            <div class="card-chart">
                <canvas data-chart="line"
                        data-animation="false"
                        data-labels='[@(Model.RustShopStatsViewModel.OrdersModel.ChartLabelValues != null ? string.Join(",", Model.RustShopStatsViewModel.OrdersModel.ChartLabelValues) : "")]'
                        data-values='[{"backgroundColor": "rgba(255, 255, 255, 0.1)", "borderColor": "#00aced", "data": [@(Model.RustShopStatsViewModel.OrdersModel.ChartValues != null ? string.Join(",", Model.RustShopStatsViewModel.OrdersModel.ChartValues) : "")]}]'
                        data-scales='{"yAxes": [{ "ticks": {"max": @ordersMaxChartValue}}]}'
                        data-hide='["legend", "points", "scalesX", "scalesY", "tooltips"]'
                        height="35"></canvas>
            </div>
        </div>
    </div>
    <div class="col-xs-6 col-md-3">
        <div class="card">
            <div class="card-values">
                <div class="p-x">
                    <small>Items</small>
                    <h3 class="card-title fw-l"><span class="icon icon-check-circle"></span> @Model.RustShopStatsViewModel.ItemsModel.TotalItems</h3>
                </div>
            </div>
            <div class="card-chart">
                <canvas data-chart="line"
                        data-animation="false"
                        data-labels='[@(Model.RustShopStatsViewModel.ItemsModel.ChartLabelValues != null ? string.Join(",", Model.RustShopStatsViewModel.ItemsModel.ChartLabelValues) : "")]'
                        data-values='[{"backgroundColor": "rgba(255, 255, 255, 0.1)", "borderColor": "#00aced", "data": [@(Model.RustShopStatsViewModel.ItemsModel.ChartValues != null ? string.Join(",", Model.RustShopStatsViewModel.ItemsModel.ChartValues) : "")]}]'
                        data-scales='{"yAxes": [{ "ticks": {"max": @itemsMaxChartValue}}]}'
                        data-hide='["legend", "points", "scalesX", "scalesY", "tooltips"]'
                        height="35"></canvas>
            </div>
        </div>
    </div>
    <div class="col-xs-6 col-md-3">
        <div class="card">
            <div class="card-values">
                <div class="p-x">
                    <small>Buyers</small>
                    <h3 class="card-title fw-l"><span class="icon icon-group"></span> @Model.RustShopStatsViewModel.BuyersModel.TotalBuyers</h3>
                </div>
            </div>
            <div class="card-chart">
                <canvas data-chart="line"
                        data-animation="false"
                        data-labels='[@(Model.RustShopStatsViewModel.BuyersModel.ChartLabelValues != null ? string.Join(",", Model.RustShopStatsViewModel.BuyersModel.ChartLabelValues) : "")]'
                        data-values='[{"backgroundColor": "rgba(255, 255, 255, 0.1)", "borderColor": "#00aced", "data": [@(Model.RustShopStatsViewModel.BuyersModel.ChartValues != null ? string.Join(",", Model.RustShopStatsViewModel.BuyersModel.ChartValues) : "")]}]'
                        data-scales='{"yAxes": [{ "ticks": {"max": @buyersMaxChartValue}}]}'
                        data-hide='["legend", "points", "scalesX", "scalesY", "tooltips"]'
                        height="35"></canvas>
            </div>
        </div>
    </div>
</div>

@if (Model.RustShopStatsViewModel.StatsPeriod != RustShopStatsPeriodEnum.Today && Model.RustShopStatsViewModel.StatsPeriod != RustShopStatsPeriodEnum.All_time)
{
<div class="row gutter-xs">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Revenue Overview</h4>
            </div>
            <div class="card-body">
                <div class="card-chart">
                    <canvas data-chart="line"
                            data-animation="false"
                            data-labels='[@(string.Join(", ", Model.RustShopStatsViewModel.RevenueOverviewModel.ChartLabelsValues))]'
                            data-values='[
                            {
                                "label": "@revenueOverviewDotDialogLast $",
                                "backgroundColor": "transparent",
                                "borderColor": "#00aced",
                                "pointBackgroundColor": "#00aced",
                                "data": [@(string.Join(", ", Model.RustShopStatsViewModel.RevenueOverviewModel.ChartValuesForPeriod))]
                            },
                            {
                                "label": "@revenueOverviewDotDialogPrevious $",
                                "backgroundColor": "transparent",
                                "borderColor": "#75ac00",
                                "pointBackgroundColor": "#75ac00",
                                "data": [@(string.Join(", ", Model.RustShopStatsViewModel.RevenueOverviewModel.ChartValuesForPreviousPeriod))]
                            }]'
                            data-tooltips='{"mode": "label"}'
                            data-hide='["gridLinesX", "legend"]'
                            height="150"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>
}
else
{
    <div class="well text-center">
        <span class="icon icon-area-chart icon-lg"></span> The graph can be seen only from one week until the annual stats period.
    </div>
}



@section Scripts
{
    <script src="~/js/customScripts/Rust/RustShopStatsSetLocationHref.js" asp-append-version="true"></script>
}
