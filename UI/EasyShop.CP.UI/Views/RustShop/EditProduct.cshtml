@using EasyShop.Domain.Enums.Rust
@model EasyShop.Domain.ViewModels.Rust.Shop.RustShopViewModel
@{
    ViewData["Title"] = "Edit product";
    Layout = "Partial/_RustEditLayout";

    string categoriesOptionsHtml = String.Empty;

    foreach (var category in Model.RustProductEditViewModel.RustCategories)
    {
        categoriesOptionsHtml += $"<option value=\"{category.Id}\">{category.Name}</option>";
    }
}
<div class="well text-center">
    <h2 class="text-center">Product settings</h2>
    <div class="row">
        <div class="col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3">
            <div class="m-b-md rustProductImage">
                <img width="100" height="100" src="~/img/rust/@($"{Model.RustProductEditViewModel.ImgUrl}.png")" alt="@Model.RustProductEditViewModel.ImgUrl">
            </div>
            <form asp-antiforgery="true" method="post" asp-area="" asp-controller="RustShop" asp-action="EditProduct">
                <input asp-for="@Model.Id" type="hidden" />
                <input asp-for="@Model.ShopName" type="hidden" />
                <input asp-for="@Model.ShopTitle" type="hidden" />
                <input asp-for="@Model.RustProductEditViewModel.Id" type="hidden" />
                <div asp-validation-summary="ModelOnly" class="alert alert-info"></div>
                <div class="showInShopWrap m-b-md">
                    <label>Show in shop</label>
                    <label class="switch switch-primary m-l-lg">
                        <input id="ShowInShop"
                               asp-for="RustProductEditViewModel.ShowInShop"
                               class="switch-input"
                               type="checkbox"
                               value="@Model.RustProductEditViewModel.ShowInShop">
                        <span class="switch-track"></span>
                        <span class="switch-thumb"></span>
                    </label>
                </div>
                <div class="form-group">
                    <label class="pull-left">Index</label>
                    <input asp-for="@Model.RustProductEditViewModel.Index" class="form-control" type="number">
                    <span class="help-block">Smaller index make product higher in list</span>
                </div>
                <div class="form-overlay-parent">
                    <div class="form-overlay"></div>
                    <div class="form-group">
                        <label class="pull-left">Name</label>
                        <input asp-for="@Model.RustProductEditViewModel.Name" class="form-control" type="text">
                    </div>
                    <div class="form-group">
                        <label class="pull-left">Description</label>
                        <textarea class="form-control m-b-md" asp-for="@Model.RustProductEditViewModel.Description" placeholder="Enter text here..."></textarea>
                    </div>
                    <div class="form-group">
                        <label class="pull-left">Price</label>
                        <input id="RustEditProductPriceInput" asp-for="@Model.RustProductEditViewModel.Price" class="form-control" type="text">
                        <span class="help-block">Input example (0.99 or 150.00)</span>
                    </div>
                    <div class="form-group">
                        <label class="pull-left">Discount in percents (%)</label>
                        <input asp-for="@Model.RustProductEditViewModel.Discount" class="form-control" min="0" max="100" type="number">
                    </div>
                    <div class="form-group">
                        <label class="pull-left">Amount</label>
                        <input asp-for="@Model.RustProductEditViewModel.Amount" class="form-control" min="1" type="number">
                    </div>
                    <div class="form-group rustProductBlockedTillDate">
                        <label>Block(ed) till</label>
                        <div class="input-group date">
                            <input asp-for="RustProductEditViewModel.BlockedTill" id="demo-datepicker-2" class="form-control" type="text">
                            <span class="input-group-btn">
                                <button id="demo-datepicker-2-btn" class="btn btn-primary" type="button">
                                    <span class="icon icon-calendar"></span>
                                </button>
                            </span>
                        </div>
                        <span class="help-block">Input example (1/1/2000 or 11/12/2000), no need zero's</span>
                    </div>
                    <div class="form-group">
                        <label class="pull-left">Current category</label>
                        <input asp-for="@Model.RustProductEditViewModel.CurrentCategoryName" class="form-control" min="1" type="text" disabled>
                    </div>
                    <div class="form-group">
                        <label for="CategoriesList" class="form-label pull-left">Assign to category</label>
                        <select asp-for="@Model.RustProductEditViewModel.NewCategoryId" id="CategoriesList" class="form-control">
                            <option selected disabled hidden></option>
                            @Html.Raw(categoriesOptionsHtml)
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <button id="SaveBtn" class="btn btn-primary btn-block m-t-md" type="submit">Save changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Styles
{
    <link rel="stylesheet" href="~/css/custom/Rust/RustEditProduct.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/demo.min.css" asp-append-version="true" />
}

@section Scripts
{
    <script src="~/js/customScripts/Rust/RustEditProduct.js" asp-append-version="true"></script>
    <script src="~/js/demo.min.js" asp-append-version="true"></script>

    @if (Model.RustProductEditViewModel.Status == RustEditProductResult.Success)
    {
        <script>
            toastr.success('Product updated');
        </script>
    }
    else if (Model.RustProductEditViewModel.Status == RustEditProductResult.Failed)
    {
        <script>
            toastr.warning('Please, check all fields for correct values!');
        </script>
    }
}
